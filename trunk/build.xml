<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="compile" name="webscarab">
    <target name="init">

        <!-- reads in certain local properties that should be set -->
        <!-- ${docbook.location} refers to the location of the    -->
        <!-- DocBook XSL stylesheets and DTD's, for building the  -->
        <!-- JavaHelp documentation                               -->
        <!-- ${proguard.location} refers to the location of the   -->
        <!-- ProGuard libraries, for building the standalone jar  -->
        <!-- ${izpack.location} refers to the location of the     -->
        <!-- IzPack libraries, for building the installer         -->
        <!-- none of these are REQUIRED, if you are just building -->
        <!-- for local use                                        -->
        <property file="local.properties"/>

        <tstamp/>
        <property name="project.name" value="${ant.project.name}"/>
        <property name="project.version" value="${DSTAMP}-${TSTAMP}"/>
        <property name="jar" location="${basedir}/${project.name}.jar"/>

        <property name="build.dir" location="${basedir}/build"/>
        <property name="src.dir" location="${basedir}/src"/>
        <property name="dist.dir" location="${basedir}/dist"/>
        <property name="javadoc.dir" location="${basedir}/doc/api"/>
        <property name="javahelpstyle" value="${docbook.location}/stylesheet/nwalsh/javahelp/javahelp.xsl"/>

        <property name="mainclass" value="org.owasp.webscarab.WebScarab"/>
        
     	<property name="concurrentjar" value="lib/concurrent.jar"/>
     	<property name="htmlparserjar" value="lib/htmlparser.jar"/>
     	<property name="bsfjar" value="lib/bsf-2.3.0.jar"/>
     	<property name="beanshelljar" value="lib/bsh-2.0b1.jar"/>
     	<property name="jfreechartjar" value="lib/jfreechart-0.9.12.jar"/>
     	<property name="jcommonjar" value="lib/jcommon-0.8.7.jar"/>
     	<property name="jhelpjar" value="lib/jhall-2.0_02.jar"/>
     	<property name="chardetjar" value="lib/chardet.jar"/>
     	<property name="tagsoupjar" value="lib/tagsoup-1.0rc2.jar"/>
     	<property name="wsdljar" value="lib/wsdl4j.jar"/>
    	<property name="openamf" value="lib/openamf.jar"/>
    	
        <path id="cpath">
            <pathelement location="${build.dir}"/>
            <pathelement path="${concurrentjar}"/>
            <pathelement path="${htmlparserjar}"/>
            <pathelement location="${bsfjar}"/>
            <pathelement location="${beanshelljar}"/>
            <pathelement location="${jfreechartjar}"/>
            <pathelement location="${jcommonjar}"/>
            <pathelement location="${jhelpjar}"/>
            <pathelement location="${chardetjar}"/>
            <pathelement location="${tagsoupjar}"/>
            <pathelement location="${wsdljar}"/>
        	<pathelement location="${openamf}"/>
        </path>
    </target>
    <target depends="init" description="clean up the build area" name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete>
            <fileset dir="${src.dir}" includes="**/*.class"/>
        </delete>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <delete>
            <fileset dir="${basedir}" includes="webscarab*.jar"/>
            <fileset dir="${basedir}" includes="webscarab*.zip"/>
        </delete>
    </target>
    <target depends="init" description="prepare the build area" name="prepare">
        <copy file="server.p12" todir="${build.dir}"/>
        <copy file="src/org/owasp/webscarab/plugin/scripted/script.bsh" todir="${build.dir}/org/owasp/webscarab/plugin/scripted/"/>
    </target>
    <target depends="prepare" description="Compile the sources" name="compile">
        <javac classpathref="cpath" deprecation="yes" destdir="${build.dir}" excludes="**/test/**" listfiles="no" optimize="on" srcdir="${src.dir}">
        </javac>
    </target>
    <target depends="prepare" description="JavaHelp" name="javahelp">
        <!-- Commented out until I can get Ant working properly
            Using xsltproc in the meantime
        <xmlcatalog id="docbook_catalogs">
            <catalogpath>
                <fileset dir="${docbook.location}" includes="**/catalog.xml"/>
            </catalogpath>
        </xmlcatalog>
        <xslt 
            basedir="doc/userguide/" 
            destdir="${build.dir}/help" 
            scanincludeddirectories="false" 
            includes="swing.xml" 
            style="${javahelpstyle}"
        >
            <xmlcatalog refid="docbook_catalogs"/>
        </xslt>
        -->
        <copy todir="${build.dir}/help/">
            <fileset dir="doc/userguide/javahelp/"/>
        </copy>
        <copy todir="${build.dir}/help/">
            <fileset dir="doc/userguide/" includes="*.png,*.jpg,*.gif,*.css"/>
        </copy>
    </target>
    <target depends="compile" description="Build a jar file" name="build">
        <jar basedir="${build.dir}" jarfile="${jar}">
            <manifest>
                <attribute name="Main-Class" value="${mainclass}"/>
                <attribute name="Class-Path" value="${concurrentjar} ${htmlparserjar} ${beanshelljar} ${jfreechartjar} ${jcommonjar} ${bsfjar} ${jhelpjar} ${chardetjar} ${tagsoupjar} ${wsdljar}"/>
                <!-- <attribute name="Built-By" value="${user.name}"/> -->
                <section name="common">
                    <attribute name="Implementation-Title" value="common"/>
                    <attribute name="Implementation-Version" value="${project.version}"/>
                    <attribute name="Implementation-Vendor" value="OWASP Foundation."/>
                </section>
            </manifest>
        </jar>
    </target>
    <target depends="build" description="run the program" name="run">
        <java jar="${jar}" fork="on">
        </java>
    </target>
    <target depends="init" description="JavaDoc" name="javadoc">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc classpathref="cpath" destdir="${javadoc.dir}/" packagenames="*">
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
        </javadoc>
    </target>
    <target depends="clean,javahelp,build" description="Build a self contained installer package" name="izpack">
        <taskdef classname="com.izforge.izpack.ant.IzPackTask" classpath="${izpack.location}/lib/compiler.jar" name="izpack"/>
        <izpack basedir="${basedir}" input="${basedir}/installer/izpack.xml" installerType="standard" izPackDir="${izpack.location}" output="${dist.dir}/webscarab-installer-${project.version}.jar"/>
    </target>
    <target depends="clean,javahelp,build" description="Build a standalone self-contained jar" name="proguard">
        <taskdef classpath="${proguard.location}/lib/proguard.jar" resource="proguard/ant/task.properties"/>
        <!-- ProGuard is used simply to aggregate the various libraries into   -->
        <!-- a single distributable. No shrinking, optimization or obfuscation -->
        <!-- is performed. We ignore warnings about certain missing classes    -->
        <!-- since they are not used/required by WebScarab                     -->
        <!-- Currently, we expect 9 warnings, about BSF engines, and Servlets  -->
        <proguard ignorewarnings="true" obfuscate="false" optimize="false" shrink="false" verbose="false" printusage="false">
            <injar name="${jar}"/>
            <injar name="${basedir}/${concurrentjar}"/>
            <injar name="${basedir}/${htmlparserjar}"/>
            <injar name="${basedir}/${beanshelljar}"/>
            <injar name="${basedir}/${bsfjar}"/>
            <injar name="${basedir}/${jfreechartjar}"/>
            <injar name="${basedir}/${jcommonjar}"/>
            <injar name="${basedir}/${chardetjar}"/>
            <injar name="${basedir}/${tagsoupjar}"/>
            <injar name="${basedir}/${wsdljar}"/>
            <libraryjar name="${basedir}/${jhelpjar}"/>
            <libraryjar name="${java.home}/lib/rt.jar"/>
            <libraryjar name="${java.home}/lib/jsse.jar"/>
            <outjar name="${dist.dir}/webscarab-selfcontained-${project.version}.jar"/>
        </proguard>
    </target>
    <target depends="init,clean" description="packages up the source files" name="source">
        <zip destfile="${dist.dir}/webscarab-src-${project.version}.zip">
            <zipfileset dir="${basedir}" includes="ChangeLog" prefix="webscarab-${project.version}"/>
            <zipfileset dir="${basedir}" includes="LICENSE" prefix="webscarab-${project.version}"/>
            <zipfileset dir="${basedir}" includes="README" prefix="webscarab-${project.version}"/>
            <zipfileset dir="${basedir}" includes="INSTALL" prefix="webscarab-${project.version}"/>
            <zipfileset dir="${basedir}" includes="build.xml" prefix="webscarab-${project.version}"/>
            <zipfileset dir="${src.dir}" excludes="**/.*" prefix="webscarab-${project.version}/src"/>
            <zipfileset dir="${javadoc.dir}" excludes="**/.*" prefix="webscarab-${project.version}/doc/api"/>
        </zip>
    </target>
    <target depends="clean,source,javadoc,proguard,izpack" description="Build all distributables" name="dist"/>
</project>